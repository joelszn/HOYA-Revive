doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title Revive
    link(rel='stylesheet', type='text/css', href='css/inline.css')
    link(rel='manifest', href='/manifest.json')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name='apple-mobile-web-app-title', content='Revive')
    link(rel='apple-touch-icon', href='appIcon/152.png')
    meta(name='msapplication-TileImage', content='appIcon/144.png')
    meta(name='msapplication-TileColor', content='#2F3BA2')
  body#nlp-base
    header.header
      h1.header__title Revive
      button#butRefresh.headerButton(aria-label='Refresh')
      button#butAdd.headerButton(aria-label='Add')
    main.main
      button#voice-input
        svg(xmlns='http://www.w3.org/2000/svg', width='24', height='24', viewbox='0 0 24 24')
          path(d='M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z')
    .loader
      svg(viewbox='0 0 32 32', width='32', height='32')
        circle#spinner(cx='16', cy='16', r='14', fill='none')
    script(src='vendor/jquery/jquery.js')
    .error
    .error--message
    p#nlp-response.card Hey... How are you feeling today?
    textarea.intro-text.base--textarea.input--textarea(style='background-color: transparent; border: none;', rows='2', placehoder="Hey... How was your day?")
    button.intro-text.base--button.input--submit-button(type='submit' style='border: none;') Revive!
    
    script(src='vendor/bootstrap/js/bootstrap.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js')
    script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js')
    script(type='text/javascript', src='js/vendors/prism.js')
    script(type='text/javascript', src='js/components/tab-panels.js')
    script(type='text/javascript', src='js/components/helpers.js')
    script(type='text/javascript', src='js/components/App.js')
    script(type='text/javascript', src='js/demo.js')
    script(type='text/javascript').
      $(document).ready(function() {
        $('.input--textarea').hide();
        $('#voice-input').click(function(){
          $('.input--textarea').show();
        })
        $('input[name="document-level"]').prop('checked', false);
        $('input[name="sentence-level"]').prop('checked', false);
        $(".input--submit-button, .output--reset-button").click(function() {
          $('input[name="document-level"]').prop('checked', false);
          $('input[name="sentence-level"]').prop('checked', false);
        });
        $("input[name='document-level']").click(function() {
          setTimeout(function() {
            $('.dcl').hide(0).delay(2000).show(0);
            $('.document-level-thankyou').show(0).delay(2000).hide(0);
          }, 100);
        });
        $("input[name='sentence-level']").click(function() {
          setTimeout(function() {
            $('.scl').hide(0).delay(2000).show(0);
            $('.sentence-level-thankyou').show(0).delay(2000).hide(0);
          }, 100);
        });
        var first_char = /\\S/;
        var SpeechAnalysis = function () {
        var recognition = new webkitSpeechRecognition();
        var transcript = final_transcript = '';
        var text = document.querySelector('.input--textarea');
        recognition.continuous = true;
        recognition.interimResults = true;
        recognition.onresult = function(event) {
        var interim_transcript = '';
        if (typeof(event.results) == 'undefined') {
          recognition.onend = null;
          recognition.stop();
          return;
        }
        for (var i = event.resultIndex; i < event.results.length; ++i) {
          if (event.results[i].isFinal) {
            final_transcript += event.results[i][0].transcript;
          } else {
          interim_transcript += event.results[i][0].transcript;
          }
        }
          text.value = final_transcript;
        };
        recognition.start();
        }
        SpeechAnalysis();
      });
